from excepciones import ErrorSalarioBase, ErrorDiasLaborados, ErrorHorasExtras
from nomina import calcular_nomina

def interfaz_consola():
    print("=== Liquidador de Nómina ===")
    try:
        salario_base = float(input("Ingrese salario base: "))
        dias_laborados = int(input("Ingrese días laborados (0-30): "))
        horas_extras = int(input("Ingrese horas extras: "))

        # Validaciones con raise
        if salario_base <= 0:
            raise ErrorSalarioBase(salario_base)
        if dias_laborados < 0 or dias_laborados > 30:
            raise ErrorDiasLaborados(dias_laborados)
        if horas_extras < 0:
            raise ErrorHorasExtras(horas_extras)

        total = calcular_nomina(salario_base, dias_laborados, horas_extras)
        print(f"✅ Total a pagar: ${total:,.2f}")

    except ValueError:
        print("❌ Error: Debe ingresar valores numéricos.")
    except (ErrorSalarioBase, ErrorDiasLaborados, ErrorHorasExtras) as e:
        print(f"❌ {e}")
    except Exception as e:
        print(f"⚠️ Ocurrió un error inesperado: {e}")

if __name__ == "__main__":
    interfaz_consola()

2 codigo 
from excepciones import ErrorSalarioBase, ErrorDiasLaborados, ErrorHorasExtras

# Valores legales Colombia 2025 (ejemplo)
SALARIO_MINIMO = 1300000
AUXILIO_TRANSPORTE = 162000
HORAS_MES = 240

def calcular_nomina_completa(salario_base, dias_laborados, horas_extra_diurnas, horas_extra_nocturnas, bonificacion=0):
    # Validaciones
    if salario_base <= 0:
        raise ErrorSalarioBase(salario_base)
    if dias_laborados < 0 or dias_laborados > 30:
        raise ErrorDiasLaborados(dias_laborados)
    if horas_extra_diurnas < 0 or horas_extra_nocturnas < 0:
        raise ErrorHorasExtras(horas_extra_diurnas + horas_extra_nocturnas)

    # Cálculos base
    salario_dia = salario_base / 30
    valor_hora = salario_base / HORAS_MES
    salario = salario_dia * dias_laborados

    # Auxilio transporte (proporcional a días trabajados)
    auxilio = 0
    if salario_base <= 2 * SALARIO_MINIMO and dias_laborados > 0:
        auxilio = (AUXILIO_TRANSPORTE / 30) * dias_laborados

    # Horas extras
    extras_diurnas = horas_extra_diurnas * valor_hora * 1.25
    extras_nocturnas = horas_extra_nocturnas * valor_hora * 1.75

    # Total devengado
    total_devengado = salario + auxilio + extras_diurnas + extras_nocturnas + bonificacion

    return round(total_devengado, 2)


def interfaz_consola():
    print("=== Liquidador de Nómina (Colombia 2025) ===")
    try:
        salario_base = float(input("Ingrese salario base: "))
        dias_laborados = int(input("Ingrese días laborados (0-30): "))
        horas_extra_diurnas = int(input("Ingrese horas extras diurnas: "))
        horas_extra_nocturnas = int(input("Ingrese horas extras nocturnas: "))
        bonificacion = float(input("Ingrese valor bonificación (0 si no hay): "))

        total = calcular_nomina_completa(salario_base, dias_laborados, horas_extra_diurnas, horas_extra_nocturnas, bonificacion)
        print(f"\n✅ Total a pagar: ${total:,.2f}")

    except ValueError:
        print("❌ Error: Debe ingresar valores numéricos.")
    except (ErrorSalarioBase, ErrorDiasLaborados, ErrorHorasExtras) as e:
        print(f"❌ {e}")
    except Exception as e:
        print(f"⚠️ Error inesperado: {e}")


if __name__ == "__main__":
    interfaz_consola()

